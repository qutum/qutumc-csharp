qutum.parser.LerStr

输入string，输出char流

qutum.parser.LerByte

输入byte流，输出byte流

qutum.parser.MetaStr

元文法字符，支持空白、词、数字、量词、转义等


qutum.parser.Lexier

词法解析器，输入byte流，输出Lexi流，行列定位，DFA算法

每Lexi为一或多组，每组为一或多分支，每分支为一或多字节（或字节范围、转义）
依次匹配每组，组内匹配某分支，贪婪匹配
组第一分支可空，即其他分支不匹配时匹配空分支
组可选重试，即各分支不匹配时，略过一字节（此字节在匹配结果中）重试组
分支可选循环，即此分支匹配后循环此组
字节可选重复，即此字节可连续匹配多个
第一组固定重试模式，且分支不可重复（避免匹配其他lexi）

默认字节范围为 编码32-126及\t \n \r
转义：\s空格 \t \n \r \d数字 \x十六进制 \a字母 \b任意字节 \B编码128以上

元文法：以空格分隔多个组，以|分隔多个分支，|前接空格为空分支，|后接的空格忽略
每个组开头*表示重试，每个分支开头+表示循环，每个字节后接+表示重复


qutum.parser.Synter

语法解析器，输入指定Lexer，基于earley算法，输出语法树
支持量词、greedy串联贪婪匹配、优先分支、语法树节点保留或穿透、寻找前方key或从当前位置错误恢复

qutum.parser.SynterStr

以LerStr为输入的语法解析器
