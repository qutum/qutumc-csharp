qutum.parser.LerStr

输入string，输出char流

qutum.parser.LerByte

输入byte流，输出byte流

qutum.parser.MetaStr

输入string，输出自举char流，支持空白、词、数字、量词、转义等


qutum.parser.Lexier

词法解析器，输入byte流，输出lexi流，行列定位，DFA算法

lexi定义为：一个步骤或以空格分隔多个步骤
每个步骤为一个分支，或以 | 分隔多个分支，|可以后接空格
每个分支为一个或多个连续的 字节、字节范围、转义
贪婪匹配

每个步骤开头可以指定不匹配时 |空分支（跳过步骤）或 *偏移一字节重试步骤，默认失败
每个分支开头可以指定 +重复步骤，默认不重复步骤
每个分支字节后可以指定 +重复字节，默认不重复字节

第一个步骤固定重试模式，且不重复步骤（避免匹配其他lexi）

默认字节范围为 32-126的字节及\t \n \r
转义：\s 空格 \t \n \r \d 数字 \x 十六进制 \a 字母 \b 任意字节 \B 128以上的字节


qutum.parser.ParserBase

语法解析器，基于Earley算法，输出语法树
支持量词、greedy串联贪婪匹配、优先分支、语法树节点保留或穿透、寻找前方key或从当前位置错误恢复

qutum.parser.ParserStr

以LerStr为输入的语法解析器

qutum.parser.Parser

指定Lexer为输入的语法解析器

